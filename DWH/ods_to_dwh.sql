CREATE SCHEMA UDACITYDWHPROJECT.DWH;

-- Dimension table for Business
CREATE OR REPLACE TABLE UDACITYDWHPROJECT.DWH.DIM_BUSINESS (
    BUSINESS_SK NUMBER(38,0) NOT NULL,
    BUSINESS_ID VARCHAR(16777216),
    NAME VARCHAR(16777216),
    ADDRESS VARCHAR(16777216),
    CITY VARCHAR(16777216),
    STATE VARCHAR(16777216),
    POSTAL_CODE VARCHAR(16777216),
    LATITUDE NUMBER(38,10),
    LONGITUDE NUMBER(38,10),
    CATEGORIES VARCHAR(16777216),
    VALID_FROM TIMESTAMP_NTZ(9),
    VALID_TO TIMESTAMP_NTZ(9),
    IS_CURRENT BOOLEAN,
    CONSTRAINT PK_DIM_BUSINESS PRIMARY KEY (BUSINESS_SK)
);

-- Dimension table for Customer
CREATE OR REPLACE TABLE UDACITYDWHPROJECT.DWH.DIM_CUSTOMER (
    CUSTOMER_SK NUMBER(38,0) NOT NULL,
    USER_ID VARCHAR(16777216),
    NAME VARCHAR(16777216),
    YELPING_SINCE TIMESTAMP_NTZ(9),
    ELITE VARCHAR(16777216),
    VALID_FROM TIMESTAMP_NTZ(9),
    VALID_TO TIMESTAMP_NTZ(9),
    IS_CURRENT BOOLEAN,
    CONSTRAINT PK_DIM_CUSTOMER PRIMARY KEY (CUSTOMER_SK)
);

CREATE OR REPLACE TABLE UDACITYDWHPROJECT.DWH.DIM_DATE (
    DATE_SK NUMBER(38,0) NOT NULL,
    FULL_DATE DATE,
    YEAR NUMBER(4,0),
    MONTH NUMBER(2,0),
    DAY NUMBER(2,0),
    QUARTER NUMBER(1,0),
    DAY_OF_WEEK NUMBER(1,0),
    WEEK_OF_YEAR NUMBER(2,0),
    CONSTRAINT PK_DIM_DATE PRIMARY KEY (DATE_SK)
);

-- Dimension table for Weather
CREATE OR REPLACE TABLE UDACITYDWHPROJECT.DWH.DIM_WEATHER (
    WEATHER_SK NUMBER(38,0) NOT NULL,
    DATE_SK NUMBER(38,0) NOT NULL,
    PRECIPITATION NUMBER(38,2),
    PRECIPITATION_NORMAL NUMBER(38,2),
    TEMPERATURE_MIN NUMBER(38,1),
    TEMPERATURE_MAX NUMBER(38,1),
    TEMPERATURE_NORMAL_MIN NUMBER(38,1),
    TEMPERATURE_NORMAL_MAX NUMBER(38,1),
    CONSTRAINT PK_DIM_WEATHER PRIMARY KEY (WEATHER_SK),
    CONSTRAINT FK_DIM_WEATHER_DATE FOREIGN KEY (DATE_SK) 
        REFERENCES UDACITYDWHPROJECT.DWH.DIM_DATE(DATE_SK)
);

-- Fact table
CREATE OR REPLACE TABLE UDACITYDWHPROJECT.DWH.FACT_BUSINESS_RATINGS (
    BUSINESS_RATING_SK NUMBER(38,0) AUTOINCREMENT START 1 INCREMENT 1,
    BUSINESS_SK NUMBER(38,0) NOT NULL,
    CUSTOMER_SK NUMBER(38,0) NOT NULL,
    DATE_SK NUMBER(38,0) NOT NULL,
    WEATHER_SK NUMBER(38,0) NOT NULL,
    RATING NUMBER(38,1),
    REVIEW_USEFUL NUMBER(38,0),
    REVIEW_FUNNY NUMBER(38,0),
    REVIEW_COOL NUMBER(38,0),
    CHECKIN_COUNT NUMBER(38,0),
    TIP_COUNT NUMBER(38,0),
    TIP_COMPLIMENT_COUNT NUMBER(38,0),
    CONSTRAINT PK_FACT_BUSINESS_RATINGS PRIMARY KEY (BUSINESS_RATING_SK),
    CONSTRAINT FK_FACT_BUSINESS FOREIGN KEY (BUSINESS_SK) 
        REFERENCES UDACITYDWHPROJECT.DWH.DIM_BUSINESS(BUSINESS_SK),
    CONSTRAINT FK_FACT_CUSTOMER FOREIGN KEY (CUSTOMER_SK) 
        REFERENCES UDACITYDWHPROJECT.DWH.DIM_CUSTOMER(CUSTOMER_SK),
    CONSTRAINT FK_FACT_DATE FOREIGN KEY (DATE_SK) 
        REFERENCES UDACITYDWHPROJECT.DWH.DIM_DATE(DATE_SK),
    CONSTRAINT FK_FACT_WEATHER FOREIGN KEY (WEATHER_SK) 
        REFERENCES UDACITYDWHPROJECT.DWH.DIM_WEATHER(WEATHER_SK)
);

-- Insert statements for populating the business dimension tables
INSERT INTO UDACITYDWHPROJECT.DWH.DIM_BUSINESS (
    BUSINESS_SK, BUSINESS_ID, NAME, ADDRESS, CITY, STATE, 
    POSTAL_CODE, LATITUDE, LONGITUDE, CATEGORIES, 
    VALID_FROM, VALID_TO, IS_CURRENT
)
SELECT 
    BUSINESS_SK, BUSINESS_ID, NAME, ADDRESS, CITY, STATE,
    POSTAL_CODE, LATITUDE, LONGITUDE, CATEGORIES,
    VALID_FROM, VALID_TO, IS_CURRENT
FROM UDACITYDWHPROJECT.ODS.BUSINESS;

-- Insert statements for populating the customer dimension tables
INSERT INTO UDACITYDWHPROJECT.DWH.DIM_CUSTOMER (
    CUSTOMER_SK, USER_ID, NAME, YELPING_SINCE, ELITE,
    VALID_FROM, VALID_TO, IS_CURRENT
)
SELECT 
    CUSTOMER_SK, USER_ID, NAME, YELPING_SINCE, ELITE,
    VALID_FROM, VALID_TO, IS_CURRENT
FROM UDACITYDWHPROJECT.ODS.CUSTOMER;

-- Insert statements for populating the date dimension tables
INSERT INTO UDACITYDWHPROJECT.DWH.DIM_DATE
SELECT * FROM UDACITYDWHPROJECT.ODS.DATE;

-- Insert statements for populating the weather dimension tables
INSERT INTO UDACITYDWHPROJECT.DWH.DIM_WEATHER (
    WEATHER_SK, DATE_SK, PRECIPITATION, PRECIPITATION_NORMAL,
    TEMPERATURE_MIN, TEMPERATURE_MAX, TEMPERATURE_NORMAL_MIN, TEMPERATURE_NORMAL_MAX
)
SELECT 
    WEATHER_SK, DATE_SK, PRECIPITATION, PRECIPITATION_NORMAL,
    TEMPERATURE_MIN, TEMPERATURE_MAX, TEMPERATURE_NORMAL_MIN, TEMPERATURE_NORMAL_MAX
FROM UDACITYDWHPROJECT.ODS.WEATHER;


-- Insert statement for fact table
INSERT INTO UDACITYDWHPROJECT.DWH.FACT_BUSINESS_RATINGS (
    BUSINESS_SK, CUSTOMER_SK, DATE_SK, WEATHER_SK,
    RATING, REVIEW_USEFUL, REVIEW_FUNNY, REVIEW_COOL,
    CHECKIN_COUNT, TIP_COUNT, TIP_COMPLIMENT_COUNT
)
SELECT 
    r.BUSINESS_SK,
    r.CUSTOMER_SK,
    r.DATE_SK,
    w.WEATHER_SK,
    r.STARS as RATING,
    r.USEFUL as REVIEW_USEFUL,
    r.FUNNY as REVIEW_FUNNY,
    r.COOL as REVIEW_COOL,
    COALESCE(c.CHECKIN_COUNT, 0) as CHECKIN_COUNT,
    COUNT(t.TIP_SK) as TIP_COUNT,
    SUM(COALESCE(t.COMPLIMENT_COUNT, 0)) as TIP_COMPLIMENT_COUNT
FROM UDACITYDWHPROJECT.ODS.REVIEW r
LEFT JOIN UDACITYDWHPROJECT.ODS.WEATHER w ON r.DATE_SK = w.DATE_SK
LEFT JOIN UDACITYDWHPROJECT.ODS.CHECKIN c ON r.BUSINESS_SK = c.BUSINESS_SK 
    AND r.DATE_SK = c.DATE_SK
LEFT JOIN UDACITYDWHPROJECT.ODS.TIPS t ON r.BUSINESS_SK = t.BUSINESS_SK 
    AND r.CUSTOMER_SK = t.CUSTOMER_SK
    AND r.DATE_SK = t.DATE_SK
GROUP BY r.BUSINESS_SK, r.CUSTOMER_SK, r.DATE_SK, w.WEATHER_SK,
    r.STARS, r.USEFUL, r.FUNNY, r.COOL, c.CHECKIN_COUNT;

